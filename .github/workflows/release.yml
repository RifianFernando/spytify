name: Deploy to GPay

on:
  push:
    branches: [main]

#    run on ubuntu latest
jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
      #      1. Checkout first using third party https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v4

      #      2. Setup JDK Using the version that I used third party https://github.com/marketplace/actions/setup-java-jdk
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Execute Gradle command - assembleDebug
        run: ./gradlew assembleDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

  distribute:
    name: Distribute bundle to GPay
    needs: test

    steps:
      #      1. Checkout first using third party https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v4

      #      2. Setup JDK Using the version that I used third party https://github.com/marketplace/actions/setup-java-jdk
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'

      # 3. update version bump add 1 to the last version
      - name: Version Bump
        uses: chkfung/android-version-actions@1.2.3
        with:
          gradePath: app/build.gradle.kts
          versionCode: ${{ github.run_number }}

      - name: Assemble Release Bundle
        run: ./gradlew bundleRelease

      # - name: Sign AAB (if needed)
      #   uses: r0adkll/sign-android-release@v1
      #   with:
      #     releaseDirectory: app/build/outputs/bundle/release
      #     signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
      #     keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
      #     alias: ${{ secrets.ANDROID_DEVS_ALIAS }}
      #     keyPassword: ${{ secrets.ANDROID_DEVS_ALIAS_PASSWORD }}

      - name: Deploy to Firebase via Fastlane
        working-directory: android

        env:
          FIREBASE_APP_ID: ${{ secrets.APP_ID }}
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}

        run: |
          bundle exec fastlane deploy_to_firebase

      # deprecated
#      - name: Install Firebase CLI
#        run: npm install -g firebase-tools
#
#      - name: Upload Artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.1
#        with:
#          appId: ${{ secrets.FIREBASE_APP_ID }}
#          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
#          groups: testers
#          file: app/build/outputs/apk/debug/app-debug.apk
#          releaseNotes: ${{ inputs.release_notes }}

#      - name: Upload to Firebase App Distribution
#        run: |
#          firebase appdistribution:distribute app/build/outputs/bundle/release/app-release.aab \
#            --app ${{ secrets.FIREBASE_APP_ID }} \
#            --token ${{ secrets.FIREBASE_TOKEN }} \
#            --groups "internal-testers" \
#            --release-notes "Automated build from GitHub Actions"
